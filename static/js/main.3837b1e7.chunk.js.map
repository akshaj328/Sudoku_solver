{"version":3,"sources":["Cell.js","Row.js","data.jsx","GridNew.jsx","Navbar.js","App.js","serviceWorker.js","index.js"],"names":["Cell","state","backgroundColor","cssSelector","r","c","staticValues","bWidthB","bStyleB","bWidthR","bStyleR","bStyleT","bWidthT","bStyleL","bWidthL","String","borderBottomWidth","borderRightWidth","borderBottomStyle","borderStyleRight","borderTopWidth","borderTopStyle","borderLeftWidth","borderLeftStyle","borderColor","element","this","props","value","rIndex","cIndex","className","style","elementValue","React","Component","Row","row","map","key","matrices","easy","medium","hard","window","$flag","GridNew","matrix","level","visualizer","column","x","gridChecker","rowChecker","columnChecker","sleep","ms","Promise","resolve","setTimeout","startSolving","a","setState","col","newMatrix","alert","console","log","number","Math","floor","b","prevProps","prevState","JSON","parse","stringify","setStaticValues","stativValues","length","newString","startmatrix","paddingLeft","marginTop","rows","padding","borderRadius","fontSize","type","onClick","Navbar","buttonSelector","e","target","btnStyle","marginLeft","App","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"gVAwEeA,G,wNApEbC,MAAQ,CACNC,gBAAiB,I,EAOnBC,YAAc,SAACC,EAAGC,EAAGC,EAAcJ,GACjC,IAEIK,EAAU,MACVC,EAAU,GACVC,EAAU,MACVC,EAAU,GACVC,EAAU,GACVC,EAAU,MACVC,EAAU,GACVC,EAAU,MAuBd,OAtBU,IAANV,GAAiB,IAANA,GAAiB,IAANA,IACxBG,EAAU,MACVC,EAAU,SAEF,IAANJ,IACFO,EAAU,QACVC,EAAU,OAEF,IAANP,IACFQ,EAAU,QACVC,EAAU,OAEF,IAANT,GAAiB,IAANA,GAAiB,IAANA,IACxBI,EAAU,MACVC,EAAU,SAQL,CACLR,gBAjCSa,OAAOX,GAAKW,OAAOV,KA0BlBC,EACA,UAEAJ,EAKVc,kBAAmBT,EACnBU,iBAAkBR,EAClBS,kBAAmBV,EACnBW,iBAAkBT,EAClBU,eAAgBR,EAChBS,eAAgBV,EAChBW,gBAAiBR,EACjBS,gBAAiBV,EACjBW,YAAa,U,2DA/CJC,GACX,OAAgB,IAAZA,EAAsBA,EACnB,O,+BAiDC,IAAD,EAC0DC,KAAKC,MAA9DzB,EADD,EACCA,gBAAiB0B,EADlB,EACkBA,MAAOC,EADzB,EACyBA,OAAQC,EADjC,EACiCA,OAAQxB,EADzC,EACyCA,aAChD,OACE,wBACEyB,UAAU,+CACVC,MAAON,KAAKvB,YAAY0B,EAAQC,EAAQxB,EAAcJ,IAErDwB,KAAKO,aAAaL,Q,GA/DRM,IAAMC,YCoBVC,E,uKAlBH,IAAD,OACP,OACE,4BACGV,KAAKC,MAAMU,IAAIC,KAAI,SAACb,EAASpB,GAAV,OAClB,kBAAC,EAAD,CACEkC,IAAKlC,EACLuB,MAAOH,EACPvB,gBAAiB,EAAKyB,MAAMzB,gBAC5B2B,OAAQ,EAAKF,MAAME,OACnBC,OAAQzB,EACRC,aAAc,EAAKqB,MAAMrB,uB,GAXnB4B,IAAMC,WCJXK,EAAW,CACtBC,KAAM,CACJ,CACE,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACzB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACzB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACzB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACzB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACzB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACzB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACzB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACzB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,KAI7BC,OAAQ,CACN,CACE,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACzB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACzB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACzB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACzB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACzB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACzB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACzB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACzB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,KAI7BC,KAAM,CACJ,CACE,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACzB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACzB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACzB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACzB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACzB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACzB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACzB,CAAC,EAAG,EAAG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","file":"static/js/main.3837b1e7.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./Cell.css\";\r\n\r\nclass Cell extends React.Component {\r\n  state = {\r\n    backgroundColor: \"\",\r\n  };\r\n\r\n  elementValue(element) {\r\n    if (element !== 0) return element;\r\n    return \"  \";\r\n  }\r\n  cssSelector = (r, c, staticValues, backgroundColor) => {\r\n    var temp = String(r) + String(c);\r\n    var bgColor = \"\";\r\n    var bWidthB = \"1px\";\r\n    var bStyleB = \"\";\r\n    var bWidthR = \"1px\";\r\n    var bStyleR = \"\";\r\n    var bStyleT = \"\";\r\n    var bWidthT = \"1px\";\r\n    var bStyleL = \"\";\r\n    var bWidthL = \"1px\";\r\n    if (r === 2 || r === 5 || r === 8) {\r\n      bWidthB = \"5px\";\r\n      bStyleB = \"solid\";\r\n    }\r\n    if (r === 0) {\r\n      bStyleT = \"solid\";\r\n      bWidthT = \"5px\";\r\n    }\r\n    if (c === 0) {\r\n      bStyleL = \"solid\";\r\n      bWidthL = \"5px\";\r\n    }\r\n    if (c === 2 || c === 5 || c === 8) {\r\n      bWidthR = \"5px\";\r\n      bStyleR = \"solid\";\r\n    }\r\n    if (temp in staticValues) {\r\n      bgColor = \"#A9A9A9\";\r\n    } else {\r\n      bgColor = backgroundColor;\r\n    }\r\n\r\n    return {\r\n      backgroundColor: bgColor,\r\n      borderBottomWidth: bWidthB,\r\n      borderRightWidth: bWidthR,\r\n      borderBottomStyle: bStyleB,\r\n      borderStyleRight: bStyleR,\r\n      borderTopWidth: bWidthT,\r\n      borderTopStyle: bStyleT,\r\n      borderLeftWidth: bWidthL,\r\n      borderLeftStyle: bStyleL,\r\n      borderColor: \"green\",\r\n    };\r\n  };\r\n\r\n  render() {\r\n    const { backgroundColor, value, rIndex, cIndex, staticValues } = this.props;\r\n    return (\r\n      <td\r\n        className=\"align-middle text-center h3 font-weight-bold\"\r\n        style={this.cssSelector(rIndex, cIndex, staticValues, backgroundColor)}\r\n      >\r\n        {this.elementValue(value)}\r\n      </td>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Cell;\r\n","import React from \"react\";\r\nimport \"./Row.css\";\r\nimport Cell from \"./Cell\";\r\n\r\nclass Row extends React.Component {\r\n  render() {\r\n    return (\r\n      <tr>\r\n        {this.props.row.map((element, c) => (\r\n          <Cell\r\n            key={c}\r\n            value={element}\r\n            backgroundColor={this.props.backgroundColor}\r\n            rIndex={this.props.rIndex}\r\n            cIndex={c}\r\n            staticValues={this.props.staticValues}\r\n          />\r\n        ))}\r\n      </tr>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Row;\r\n","export const matrices = {\r\n  easy: [\r\n    [\r\n      [0, 0, 3, 0, 9, 4, 1, 6, 7],\r\n      [4, 7, 9, 6, 1, 0, 0, 0, 0],\r\n      [5, 0, 0, 0, 7, 0, 0, 9, 0],\r\n      [3, 2, 0, 9, 0, 0, 0, 7, 0],\r\n      [1, 0, 0, 0, 0, 8, 0, 0, 5],\r\n      [0, 5, 7, 2, 0, 1, 0, 0, 3],\r\n      [0, 0, 5, 4, 0, 0, 7, 0, 6],\r\n      [0, 0, 2, 3, 0, 6, 4, 0, 0],\r\n      [0, 3, 0, 0, 8, 0, 2, 5, 0],\r\n    ],\r\n  ],\r\n\r\n  medium: [\r\n    [\r\n      [0, 1, 0, 5, 0, 0, 0, 0, 4],\r\n      [0, 0, 0, 0, 3, 0, 0, 5, 0],\r\n      [0, 4, 0, 0, 0, 0, 6, 7, 1],\r\n      [0, 0, 6, 0, 7, 0, 0, 0, 0],\r\n      [0, 2, 0, 0, 9, 5, 0, 0, 0],\r\n      [4, 0, 0, 0, 0, 0, 0, 2, 0],\r\n      [0, 0, 0, 0, 1, 0, 0, 0, 0],\r\n      [1, 0, 0, 0, 0, 6, 7, 0, 8],\r\n      [0, 0, 9, 0, 0, 0, 0, 0, 6],\r\n    ],\r\n  ],\r\n\r\n  hard: [\r\n    [\r\n      [0, 3, 9, 2, 0, 0, 7, 1, 0],\r\n      [0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n      [0, 7, 0, 0, 0, 0, 8, 0, 0],\r\n      [1, 0, 5, 0, 3, 0, 0, 0, 0],\r\n      [0, 9, 0, 6, 0, 0, 0, 3, 0],\r\n      [0, 8, 0, 0, 7, 5, 9, 0, 0],\r\n      [0, 5, 0, 0, 0, 6, 0, 0, 0],\r\n      [9, 0, 1, 0, 0, 7, 4, 0, 0],\r\n      [0, 0, 8, 9, 0, 0, 0, 0, 2],\r\n    ],\r\n    [\r\n      [0, 0, 0, 8, 0, 0, 9, 3, 0],\r\n      [4, 0, 2, 0, 0, 0, 0, 0, 0],\r\n      [0, 0, 6, 0, 0, 0, 0, 0, 0],\r\n      [0, 0, 0, 0, 1, 5, 4, 0, 0],\r\n      [0, 0, 0, 4, 6, 0, 0, 0, 0],\r\n      [5, 0, 0, 9, 0, 3, 0, 0, 0],\r\n      [0, 0, 7, 0, 0, 0, 0, 0, 8],\r\n      [2, 0, 5, 0, 0, 0, 3, 1, 0],\r\n      [0, 0, 4, 0, 0, 0, 0, 2, 6],\r\n    ],\r\n  ],\r\n};\r\n","import React, { Component } from \"react\";\r\nimport Row from \"./Row\";\r\nimport { matrices } from \"./data\";\r\n\r\nwindow.$flag = false;\r\n\r\nconst GREEN_COLOR = \"#FFFFFF\";\r\nconst WHITE_COLOR = \"#FFFFFF\";\r\n\r\nclass GridNew extends Component {\r\n  state = {\r\n    matrix: [[]],\r\n    backgroundColor: \"\",\r\n    staticValues: {},\r\n    level: \"\",\r\n  };\r\n\r\n  gridChecker(row, column, number) {\r\n    let { matrix } = this.state;\r\n    row = Math.floor(row / 3) * 3;\r\n    column = Math.floor(column / 3) * 3;\r\n    for (let a = row; a < row + 3; a++) {\r\n      for (let b = column; b < column + 3; b++) {\r\n        if (number === matrix[a][b]) return false;\r\n      }\r\n    }\r\n    return true;\r\n  }\r\n\r\n  columnChecker(column, number) {\r\n    let { matrix } = this.state;\r\n    for (let a = 0; a < 9; a++) {\r\n      if (number === matrix[a][column]) return false;\r\n    }\r\n    return true;\r\n  }\r\n\r\n  rowChecker(row, number) {\r\n    let { matrix } = this.state;\r\n    for (let a = 0; a < 9; a++) {\r\n      if (number === matrix[row][a]) return false;\r\n    }\r\n    return true;\r\n  }\r\n\r\n  visualizer = (row, column) => {\r\n    // try {\r\n    var temp = String(row) + String(column);\r\n    if (temp in this.state.staticValues) {\r\n      return -1;\r\n    } else {\r\n      // console.log()\r\n      for (let x = this.state.matrix[row][column] + 1; x < 10; x++) {\r\n        if (\r\n          this.gridChecker(row, column, x) &&\r\n          this.rowChecker(row, x) &&\r\n          this.columnChecker(column, x)\r\n        ) {\r\n          return x;\r\n        }\r\n      }\r\n      return 0;\r\n    }\r\n    // } catch (e) {\r\n    //   console.log(e);\r\n    // }\r\n  };\r\n\r\n  // sleep = (milliseconds) => {\r\n  //   return new Promise((resolve) => setTimeout(resolve, milliseconds));\r\n  // };\r\n\r\n  // recursion = (row, column) => {\r\n  //   var rowColIndex = String(row) + String(column);\r\n  //   if (rowColIndex in this.state.staticValues) {\r\n  //     this.recursion(row, column + 1);\r\n  //   } else {\r\n  //     if (row < 9 && column < 9) {\r\n  //       for (let x = 1; x < 10; x++) {\r\n  //         if (\r\n  //           this.gridChecker(row, column, x) &&\r\n  //           this.rowChecker(row, x) &&\r\n  //           this.columnChecker(column, x)\r\n  //         ) {\r\n  //           let newMatrix = [...this.state.matrix];\r\n  //           newMatrix[row][column] = x;\r\n  //           this.recursion(row, column + 1);\r\n  //         }\r\n  //       }\r\n  //       if (!window.$flag) {\r\n  //         let abMatrix = [...this.state.matrix];\r\n  //         abMatrix[row][column] = 0;\r\n  //         this.setState({ matrix: abMatrix });\r\n  //       }\r\n  //     } else if (column >= 9) {\r\n  //       this.recursion(row + 1, 0);\r\n  //     } else {\r\n  //       window.$flag = true;\r\n  //       return;\r\n  //     }\r\n  //   }\r\n  // };\r\n\r\n  sleep = (ms) => {\r\n    return new Promise((resolve) => setTimeout(resolve, ms));\r\n  };\r\n\r\n  startSolving = async () => {\r\n    this.setState({ backgroundColor: GREEN_COLOR });\r\n    let row = 0;\r\n    let col = 0;\r\n\r\n    while (true) {\r\n      if (row > 8) {\r\n        break;\r\n      }\r\n\r\n      let value = this.visualizer(row, col);\r\n\r\n      if (value === 0) {\r\n        let newMatrix = [...this.state.matrix];\r\n        newMatrix[row][col] = value;\r\n        switch (this.state.level) {\r\n          case \"easy\":\r\n            this.setState({ matrix: newMatrix }, await this.sleep(10));\r\n            break;\r\n          case \"medium\":\r\n            this.setState({ matrix: newMatrix }, await this.sleep(5));\r\n            break;\r\n          case \"hard\":\r\n            this.setState({ matrix: newMatrix }, await this.sleep(1));\r\n            break;\r\n          default:\r\n            alert(\"Somnething is wrong\");\r\n        }\r\n        while (true) {\r\n          if (col === 0) {\r\n            row -= 1;\r\n            col = 8;\r\n          } else {\r\n            col -= 1;\r\n          }\r\n          var temp = String(row) + String(col);\r\n          if (!(temp in this.state.staticValues)) {\r\n            break;\r\n          }\r\n        }\r\n        if (row < 0 && col < 0) {\r\n          alert(\"No solutions possible\");\r\n          break;\r\n        }\r\n      } else if (value === -1) {\r\n        if (col === 8) {\r\n          row += 1;\r\n          col = 0;\r\n        } else {\r\n          col += 1;\r\n        }\r\n      } else {\r\n        let newMatrix = [...this.state.matrix];\r\n        newMatrix[row][col] = value;\r\n        switch (this.state.level) {\r\n          case \"easy\":\r\n            this.setState({ matrix: newMatrix }, await this.sleep(10));\r\n            break;\r\n          case \"medium\":\r\n            this.setState({ matrix: newMatrix }, await this.sleep(5));\r\n            break;\r\n          case \"hard\":\r\n            this.setState({ matrix: newMatrix }, await this.sleep(0.01));\r\n            break;\r\n          default:\r\n            console.log(\"Something is wrong in setting matrix\");\r\n        }\r\n\r\n        if (col === 8) {\r\n          row += 1;\r\n          col = 0;\r\n        } else {\r\n          col += 1;\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (prevProps.level !== this.props.level) {\r\n      let newMatrix = [];\r\n      newMatrix = JSON.parse(JSON.stringify(matrices[this.props.level][0]));\r\n      this.setState({ matrix: newMatrix }, () => {\r\n        this.setStaticValues();\r\n      });\r\n      this.setState({ level: this.props.level }, () => {});\r\n      this.setState({ backgroundColor: WHITE_COLOR }, () => {});\r\n    }\r\n  }\r\n\r\n  setStaticValues() {\r\n    let stativValues = {};\r\n    for (let r = 0; r < this.state.matrix.length; r++) {\r\n      for (let c = 0; c < this.state.matrix[r].length; c++) {\r\n        if (this.state.matrix[r][c] !== 0) {\r\n          let newString = \"\";\r\n          newString += String(r) + String(c);\r\n          stativValues[newString] = 1;\r\n        }\r\n      }\r\n    }\r\n    this.setState({ staticValues: stativValues }, () => {});\r\n  }\r\n\r\n  componentWillMount() {\r\n    this.setState({ level: \"easy\" });\r\n    let startmatrix = JSON.parse(JSON.stringify(matrices[this.props.level][0]));\r\n    this.setState({ matrix: startmatrix }, () => {\r\n      this.setStaticValues();\r\n    });\r\n    this.setState({ backgroundColor: WHITE_COLOR });\r\n  }\r\n\r\n  render() {\r\n    let gridStyles = {\r\n      paddingLeft: 140,\r\n      marginTop: 140,\r\n    };\r\n\r\n    let buttonStyle = {\r\n      padding: 10,\r\n      marginTop: 455,\r\n      borderRadius: 15,\r\n      fontSize: 20,\r\n    };\r\n    return (\r\n      <div className=\"container\">\r\n        <div className=\"row justify-content-center\">\r\n          <div className=\"col-10 \" style={gridStyles}>\r\n            <table>\r\n              <tbody>\r\n                {this.state.matrix.map((rows, r) => (\r\n                  <Row\r\n                    key={r}\r\n                    row={rows}\r\n                    backgroundColor={this.state.backgroundColor}\r\n                    rIndex={r}\r\n                    staticValues={this.state.staticValues}\r\n                  />\r\n                ))}\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n          <div className=\"col-2 h1\">\r\n            <input\r\n              style={buttonStyle}\r\n              className=\"btn btn-outline-success font-weight-bold\"\r\n              type=\"button\"\r\n              onClick={() => this.startSolving()}\r\n              value=\"Solve\"\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default GridNew;\r\n","import React from \"react\";\r\nimport GridNew from \"./GridNew\";\r\nimport \"./Navbar.css\";\r\n\r\nclass Navbar extends React.Component {\r\n  state = {\r\n    level: \"easy\",\r\n  };\r\n\r\n  buttonSelector = (e) => {\r\n    this.setState({ level: e.target.value });\r\n  };\r\n\r\n  render() {\r\n    let btnStyle = {\r\n      marginLeft: 10,\r\n    };\r\n    return (\r\n      <div>\r\n        <nav className=\"navbar mt-5 navbar-expand-lg navbar-dark bg-dark\">\r\n          <div className=\"navbar-nav d-flex center-buttons col-4 \">\r\n            <button\r\n              style={btnStyle}\r\n              onClick={this.buttonSelector}\r\n              className=\"btn col-4 btn-outline-success float-right\"\r\n              type=\"button\"\r\n              value=\"easy\"\r\n            >\r\n              Easy\r\n            </button>\r\n            <button\r\n              style={btnStyle}\r\n              onClick={this.buttonSelector}\r\n              className=\"btn col-4 btn-outline-success float-right\"\r\n              type=\"button\"\r\n              value=\"medium\"\r\n            >\r\n              Medium\r\n            </button>\r\n            <button\r\n              style={btnStyle}\r\n              onClick={this.buttonSelector}\r\n              className=\"btn col-4 btn-outline-success float-right\"\r\n              type=\"button\"\r\n              value=\"hard\"\r\n            >\r\n              Hard\r\n            </button>\r\n          </div>\r\n        </nav>\r\n        <GridNew level={this.state.level} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Navbar;\r\n","import React from \"react\";\nimport Navbar from \"./Navbar\";\n\nfunction App() {\n  return (\n    <div>\n      <Navbar />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}