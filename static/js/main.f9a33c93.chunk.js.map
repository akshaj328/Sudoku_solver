{"version":3,"sources":["Cell.js","Row.js","data.jsx","EasyGrid.jsx","MediumGrid.jsx","HardGrid.jsx","Navbar.js","App.js","serviceWorker.js","index.js"],"names":["Cell","state","backgroundColor","cssSelector","r","c","staticValues","bWidthB","bStyleB","bWidthR","bStyleR","bStyleT","bWidthT","bStyleL","bWidthL","String","borderBottomWidth","borderRightWidth","borderBottomStyle","borderStyleRight","borderTopWidth","borderTopStyle","borderLeftWidth","borderLeftStyle","borderColor","element","this","props","value","rIndex","cIndex","className","style","elementValue","React","Component","Row","row","map","key","matrices","window","$flag","GridNew","matrix","speed","button","visualizer","column","x","gridChecker","rowChecker","columnChecker","recursion","newMatrix","setState","abMatrix","sleep","ms","Promise","resolve","setTimeout","handleChange","e","target","startSolving","a","col","JSON","parse","stringify","alert","number","Math","floor","b","prevProps","prevState","level","setStaticValues","length","newString","startmatrix","Fragment","textAlign","display","type","min","max","defaultValue","onChange","disabled","onClick","rows","Navbar","buttonSelector","to","process","exact","path","component","EasyGrid","MediumGrid","HardGrid","App","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.f9a33c93.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./Cell.css\";\r\n\r\nclass Cell extends React.Component {\r\n  state = {\r\n    backgroundColor: \"\",\r\n  };\r\n\r\n  elementValue(element) {\r\n    if (element !== 0) return element;\r\n    return \"  \";\r\n  }\r\n  cssSelector = (r, c, staticValues, backgroundColor) => {\r\n    var temp = String(r) + String(c);\r\n    var bgColor = \"\";\r\n    var bWidthB = \"1px\";\r\n    var bStyleB = \"\";\r\n    var bWidthR = \"1px\";\r\n    var bStyleR = \"\";\r\n    var bStyleT = \"\";\r\n    var bWidthT = \"1px\";\r\n    var bStyleL = \"\";\r\n    var bWidthL = \"1px\";\r\n    if (r === 2 || r === 5 || r === 8) {\r\n      bWidthB = \"5px\";\r\n      bStyleB = \"solid\";\r\n    }\r\n    if (r === 0) {\r\n      bStyleT = \"solid\";\r\n      bWidthT = \"5px\";\r\n    }\r\n    if (c === 0) {\r\n      bStyleL = \"solid\";\r\n      bWidthL = \"5px\";\r\n    }\r\n    if (c === 2 || c === 5 || c === 8) {\r\n      bWidthR = \"5px\";\r\n      bStyleR = \"solid\";\r\n    }\r\n    if (temp in staticValues) {\r\n      bgColor = \"#A9A9A9\";\r\n    } else {\r\n      bgColor = backgroundColor;\r\n    }\r\n\r\n    return {\r\n      backgroundColor: bgColor,\r\n      borderBottomWidth: bWidthB,\r\n      borderRightWidth: bWidthR,\r\n      borderBottomStyle: bStyleB,\r\n      borderStyleRight: bStyleR,\r\n      borderTopWidth: bWidthT,\r\n      borderTopStyle: bStyleT,\r\n      borderLeftWidth: bWidthL,\r\n      borderLeftStyle: bStyleL,\r\n      borderColor: \"green\",\r\n    };\r\n  };\r\n\r\n  render() {\r\n    const { backgroundColor, value, rIndex, cIndex, staticValues } = this.props;\r\n    return (\r\n      <td\r\n        className=\"align-middle text-center h3 font-weight-bold\"\r\n        style={this.cssSelector(rIndex, cIndex, staticValues, backgroundColor)}\r\n      >\r\n        {this.elementValue(value)}\r\n      </td>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Cell;\r\n","import React from \"react\";\r\nimport \"./Row.css\";\r\nimport Cell from \"./Cell\";\r\n\r\nclass Row extends React.Component {\r\n  render() {\r\n    return (\r\n      <tr>\r\n        {this.props.row.map((element, c) => (\r\n          <Cell\r\n            key={c}\r\n            value={element}\r\n            backgroundColor={this.props.backgroundColor}\r\n            rIndex={this.props.rIndex}\r\n            cIndex={c}\r\n            staticValues={this.props.staticValues}\r\n          />\r\n        ))}\r\n      </tr>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Row;\r\n","export const matrices = {\r\n  easy: [\r\n    [\r\n      [0, 0, 3, 0, 9, 4, 1, 6, 7],\r\n      [4, 7, 9, 6, 1, 0, 0, 0, 0],\r\n      [5, 0, 0, 0, 7, 0, 0, 9, 0],\r\n      [3, 2, 0, 9, 0, 0, 0, 7, 0],\r\n      [1, 0, 0, 0, 0, 8, 0, 0, 5],\r\n      [0, 5, 7, 2, 0, 1, 0, 0, 3],\r\n      [0, 0, 5, 4, 0, 0, 7, 0, 6],\r\n      [0, 0, 2, 3, 0, 6, 4, 0, 0],\r\n      [0, 3, 0, 0, 8, 0, 2, 5, 0],\r\n    ],\r\n  ],\r\n\r\n  medium: [\r\n    [\r\n      [0, 1, 0, 5, 0, 0, 0, 0, 4],\r\n      [0, 0, 0, 0, 3, 0, 0, 5, 0],\r\n      [0, 4, 0, 0, 0, 0, 6, 7, 1],\r\n      [0, 0, 6, 0, 7, 0, 0, 0, 0],\r\n      [0, 2, 0, 0, 9, 5, 0, 0, 0],\r\n      [4, 0, 0, 0, 0, 0, 0, 2, 0],\r\n      [0, 0, 0, 0, 1, 0, 0, 0, 0],\r\n      [1, 0, 0, 0, 0, 6, 7, 0, 8],\r\n      [0, 0, 9, 0, 0, 0, 0, 0, 6],\r\n    ],\r\n  ],\r\n\r\n  hard: [\r\n    [\r\n      [0, 3, 9, 2, 0, 0, 7, 1, 0],\r\n      [0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n      [0, 7, 0, 0, 0, 0, 8, 0, 0],\r\n      [1, 0, 5, 0, 3, 0, 0, 0, 0],\r\n      [0, 9, 0, 6, 0, 0, 0, 3, 0],\r\n      [0, 8, 0, 0, 7, 5, 9, 0, 0],\r\n      [0, 5, 0, 0, 0, 6, 0, 0, 0],\r\n      [9, 0, 1, 0, 0, 7, 4, 0, 0],\r\n      [0, 0, 8, 9, 0, 0, 0, 0, 2],\r\n    ],\r\n    [\r\n      [0, 0, 0, 8, 0, 0, 9, 3, 0],\r\n      [4, 0, 2, 0, 0, 0, 0, 0, 0],\r\n      [0, 0, 6, 0, 0, 0, 0, 0, 0],\r\n      [0, 0, 0, 0, 1, 5, 4, 0, 0],\r\n      [0, 0, 0, 4, 6, 0, 0, 0, 0],\r\n      [5, 0, 0, 9, 0, 3, 0, 0, 0],\r\n      [0, 0, 7, 0, 0, 0, 0, 0, 8],\r\n      [2, 0, 5, 0, 0, 0, 3, 1, 0],\r\n      [0, 0, 4, 0, 0, 0, 0, 2, 6],\r\n    ],\r\n  ],\r\n};\r\n","import React, { Component } from \"react\";\r\nimport Row from \"./Row\";\r\nimport { matrices } from \"./data\";\r\n\r\nwindow.$flag = false;\r\n\r\nconst WHITE_COLOR = \"#FFFFFF\";\r\n\r\nclass GridNew extends Component {\r\n  state = {\r\n    matrix: [[]],\r\n    backgroundColor: \"\",\r\n    staticValues: {},\r\n    speed: 25,\r\n    button: false,\r\n  };\r\n\r\n  gridChecker(row, column, number) {\r\n    let { matrix } = this.state;\r\n    row = Math.floor(row / 3) * 3;\r\n    column = Math.floor(column / 3) * 3;\r\n    for (let a = row; a < row + 3; a++) {\r\n      for (let b = column; b < column + 3; b++) {\r\n        if (number === matrix[a][b]) return false;\r\n      }\r\n    }\r\n    return true;\r\n  }\r\n\r\n  columnChecker(column, number) {\r\n    let { matrix } = this.state;\r\n    for (let a = 0; a < 9; a++) {\r\n      if (number === matrix[a][column]) return false;\r\n    }\r\n    return true;\r\n  }\r\n\r\n  rowChecker(row, number) {\r\n    let { matrix } = this.state;\r\n    for (let a = 0; a < 9; a++) {\r\n      if (number === matrix[row][a]) return false;\r\n    }\r\n    return true;\r\n  }\r\n\r\n  visualizer = (row, column) => {\r\n    var temp = String(row) + String(column);\r\n    if (temp in this.state.staticValues) {\r\n      return -1;\r\n    } else {\r\n      for (let x = this.state.matrix[row][column] + 1; x < 10; x++) {\r\n        if (\r\n          this.gridChecker(row, column, x) &&\r\n          this.rowChecker(row, x) &&\r\n          this.columnChecker(column, x)\r\n        ) {\r\n          return x;\r\n        }\r\n      }\r\n      return 0;\r\n    }\r\n  };\r\n\r\n  recursion = (row, column) => {\r\n    var rowColIndex = String(row) + String(column);\r\n    if (rowColIndex in this.state.staticValues) {\r\n      this.recursion(row, column + 1);\r\n    } else {\r\n      if (row < 9 && column < 9) {\r\n        for (let x = 1; x < 10; x++) {\r\n          if (\r\n            this.gridChecker(row, column, x) &&\r\n            this.rowChecker(row, x) &&\r\n            this.columnChecker(column, x)\r\n          ) {\r\n            let newMatrix = [...this.state.matrix];\r\n            newMatrix[row][column] = x;\r\n            this.setState({ matrix: newMatrix });\r\n            this.recursion(row, column + 1);\r\n          }\r\n        }\r\n        if (!window.$flag) {\r\n          let abMatrix = [...this.state.matrix];\r\n          abMatrix[row][column] = 0;\r\n          this.setState({ matrix: abMatrix });\r\n        }\r\n      } else if (column >= 9) {\r\n        this.recursion(row + 1, 0);\r\n      } else {\r\n        window.$flag = true;\r\n        return;\r\n      }\r\n    }\r\n  };\r\n\r\n  sleep = (ms) => {\r\n    return new Promise((resolve) => setTimeout(resolve, ms));\r\n  };\r\n\r\n  handleChange = (e) => {\r\n    this.setState({ speed: e.target.value });\r\n  };\r\n\r\n  startSolving = async () => {\r\n    this.setState({ button: true });\r\n    let row = 0;\r\n    let col = 0;\r\n\r\n    while (true) {\r\n      if (this.state.speed === \"50\") {\r\n        let newMatrix = [];\r\n        newMatrix = JSON.parse(JSON.stringify(matrices[\"easy\"][0]));\r\n        this.setState({ matrix: newMatrix }, () => this.recursion(0, 0));\r\n        window.$flag = false;\r\n        break;\r\n      }\r\n      if (row > 8) {\r\n        break;\r\n      }\r\n\r\n      let value = this.visualizer(row, col);\r\n\r\n      if (value === 0) {\r\n        let newMatrix = [...this.state.matrix];\r\n        newMatrix[row][col] = value;\r\n        this.setState(\r\n          { matrix: newMatrix },\r\n          await this.sleep(50 - this.state.speed)\r\n        );\r\n        while (true) {\r\n          if (col === 0) {\r\n            row -= 1;\r\n            col = 8;\r\n          } else {\r\n            col -= 1;\r\n          }\r\n          var temp = String(row) + String(col);\r\n          if (!(temp in this.state.staticValues)) {\r\n            break;\r\n          }\r\n        }\r\n        if (row < 0 && col < 0) {\r\n          alert(\"No solutions possible\");\r\n          break;\r\n        }\r\n      } else if (value === -1) {\r\n        if (col === 8) {\r\n          row += 1;\r\n          col = 0;\r\n        } else {\r\n          col += 1;\r\n        }\r\n      } else {\r\n        let newMatrix = [...this.state.matrix];\r\n        newMatrix[row][col] = value;\r\n        this.setState(\r\n          { matrix: newMatrix },\r\n          await this.sleep(50 - this.state.speed)\r\n        );\r\n\r\n        if (col === 8) {\r\n          row += 1;\r\n          col = 0;\r\n        } else {\r\n          col += 1;\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (prevProps.level !== this.props.level) {\r\n      let newMatrix = [];\r\n      newMatrix = JSON.parse(JSON.stringify(matrices[\"easy\"][0]));\r\n      this.setState({ matrix: newMatrix }, () => {\r\n        this.setStaticValues();\r\n      });\r\n      this.setState({ backgroundColor: WHITE_COLOR }, () => {});\r\n    }\r\n  }\r\n\r\n  setStaticValues() {\r\n    let staticValues = {};\r\n    for (let r = 0; r < this.state.matrix.length; r++) {\r\n      for (let c = 0; c < this.state.matrix[r].length; c++) {\r\n        if (this.state.matrix[r][c] !== 0) {\r\n          let newString = \"\";\r\n          newString += String(r) + String(c);\r\n          staticValues[newString] = 1;\r\n        }\r\n      }\r\n    }\r\n    this.setState({ staticValues: staticValues }, () => {});\r\n  }\r\n\r\n  componentWillMount() {\r\n    let startmatrix = JSON.parse(JSON.stringify(matrices[\"easy\"][0]));\r\n    this.setState({ matrix: startmatrix }, () => {\r\n      this.setStaticValues();\r\n    });\r\n    this.setState({ backgroundColor: WHITE_COLOR });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        {\" \"}\r\n        <div\r\n          className=\"justify-content-center\"\r\n          style={{\r\n            textAlign: \"center\",\r\n          }}\r\n        >\r\n          <div style={{ display: \"inline\" }}>\r\n            <p\r\n              style={{\r\n                display: \"inline\",\r\n              }}\r\n              className=\"mt-3 mr-3\"\r\n            >\r\n              Speed slider:\r\n            </p>\r\n            <input\r\n              type=\"range\"\r\n              min=\"0\"\r\n              max=\"50\"\r\n              defaultValue=\"25\"\r\n              onChange={this.handleChange}\r\n            />\r\n          </div>\r\n          <div className=\"h1\" style={{ display: \"inline\" }}>\r\n            <input\r\n              className=\"btn rounded-circle h1 btn-outline-success mt-3 p-2 ml-5 font-weight-bold\"\r\n              type=\"button\"\r\n              disabled={this.state.button}\r\n              onClick={() => this.startSolving()}\r\n              value=\"Solve\"\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className=\"container\">\r\n          <div className=\"row justify-content-center\">\r\n            <div className=\"mt-3\">\r\n              <table>\r\n                <tbody>\r\n                  {this.state.matrix.map((rows, r) => (\r\n                    <Row\r\n                      key={r}\r\n                      row={rows}\r\n                      backgroundColor={this.state.backgroundColor}\r\n                      rIndex={r}\r\n                      staticValues={this.state.staticValues}\r\n                    />\r\n                  ))}\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default GridNew;\r\n","import React, { Component } from \"react\";\r\nimport Row from \"./Row\";\r\nimport { matrices } from \"./data\";\r\n\r\nwindow.$flag = false;\r\n\r\nconst WHITE_COLOR = \"#FFFFFF\";\r\n\r\nclass GridNew extends Component {\r\n  state = {\r\n    matrix: [[]],\r\n    backgroundColor: \"\",\r\n    staticValues: {},\r\n    speed: 25,\r\n    button: false,\r\n  };\r\n\r\n  gridChecker(row, column, number) {\r\n    let { matrix } = this.state;\r\n    row = Math.floor(row / 3) * 3;\r\n    column = Math.floor(column / 3) * 3;\r\n    for (let a = row; a < row + 3; a++) {\r\n      for (let b = column; b < column + 3; b++) {\r\n        if (number === matrix[a][b]) return false;\r\n      }\r\n    }\r\n    return true;\r\n  }\r\n  handleChange = (e) => {\r\n    this.setState({ speed: e.target.value });\r\n  };\r\n\r\n  columnChecker(column, number) {\r\n    let { matrix } = this.state;\r\n    for (let a = 0; a < 9; a++) {\r\n      if (number === matrix[a][column]) return false;\r\n    }\r\n    return true;\r\n  }\r\n\r\n  rowChecker(row, number) {\r\n    let { matrix } = this.state;\r\n    for (let a = 0; a < 9; a++) {\r\n      if (number === matrix[row][a]) return false;\r\n    }\r\n    return true;\r\n  }\r\n\r\n  visualizer = (row, column) => {\r\n    var temp = String(row) + String(column);\r\n    if (temp in this.state.staticValues) {\r\n      return -1;\r\n    } else {\r\n      for (let x = this.state.matrix[row][column] + 1; x < 10; x++) {\r\n        if (\r\n          this.gridChecker(row, column, x) &&\r\n          this.rowChecker(row, x) &&\r\n          this.columnChecker(column, x)\r\n        ) {\r\n          return x;\r\n        }\r\n      }\r\n      return 0;\r\n    }\r\n  };\r\n\r\n  recursion = (row, column) => {\r\n    var rowColIndex = String(row) + String(column);\r\n    if (rowColIndex in this.state.staticValues) {\r\n      this.recursion(row, column + 1);\r\n    } else {\r\n      if (row < 9 && column < 9) {\r\n        for (let x = 1; x < 10; x++) {\r\n          if (\r\n            this.gridChecker(row, column, x) &&\r\n            this.rowChecker(row, x) &&\r\n            this.columnChecker(column, x)\r\n          ) {\r\n            let newMatrix = [...this.state.matrix];\r\n            newMatrix[row][column] = x;\r\n            this.setState({ matrix: newMatrix });\r\n            this.recursion(row, column + 1);\r\n          }\r\n        }\r\n        if (!window.$flag) {\r\n          let newMatrix = [...this.state.matrix];\r\n          newMatrix[row][column] = 0;\r\n          this.setState({ matrix: newMatrix });\r\n        }\r\n      } else if (column >= 9) {\r\n        this.recursion(row + 1, 0);\r\n      } else {\r\n        window.$flag = true;\r\n        return;\r\n      }\r\n    }\r\n  };\r\n\r\n  sleep = (ms) => {\r\n    return new Promise((resolve) => setTimeout(resolve, ms));\r\n  };\r\n\r\n  startSolving = async () => {\r\n    this.setState({ button: true });\r\n    let row = 0;\r\n    let col = 0;\r\n\r\n    while (true) {\r\n      if (this.state.speed === \"50\") {\r\n        let newMatrix = [];\r\n        newMatrix = JSON.parse(JSON.stringify(matrices[\"medium\"][0]));\r\n        this.setState({ matrix: newMatrix }, () => this.recursion(0, 0));\r\n        window.$flag = false;\r\n        break;\r\n      }\r\n      if (row > 8) {\r\n        break;\r\n      }\r\n\r\n      let value = this.visualizer(row, col);\r\n\r\n      if (value === 0) {\r\n        let newMatrix = [...this.state.matrix];\r\n        newMatrix[row][col] = value;\r\n        this.setState(\r\n          { matrix: newMatrix },\r\n          await this.sleep(50 - this.state.speed)\r\n        );\r\n        while (true) {\r\n          if (col === 0) {\r\n            row -= 1;\r\n            col = 8;\r\n          } else {\r\n            col -= 1;\r\n          }\r\n          var temp = String(row) + String(col);\r\n          if (!(temp in this.state.staticValues)) {\r\n            break;\r\n          }\r\n        }\r\n        if (row < 0 && col < 0) {\r\n          alert(\"No solutions possible\");\r\n          break;\r\n        }\r\n      } else if (value === -1) {\r\n        if (col === 8) {\r\n          row += 1;\r\n          col = 0;\r\n        } else {\r\n          col += 1;\r\n        }\r\n      } else {\r\n        let newMatrix = [...this.state.matrix];\r\n        newMatrix[row][col] = value;\r\n        this.setState(\r\n          { matrix: newMatrix },\r\n          await this.sleep(50 - this.state.speed)\r\n        );\r\n\r\n        if (col === 8) {\r\n          row += 1;\r\n          col = 0;\r\n        } else {\r\n          col += 1;\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (prevProps.level !== this.props.level) {\r\n      let newMatrix = [];\r\n      newMatrix = JSON.parse(JSON.stringify(matrices[\"medium\"][0]));\r\n      this.setState({ matrix: newMatrix }, () => {\r\n        this.setStaticValues();\r\n      });\r\n      this.setState({ backgroundColor: WHITE_COLOR });\r\n    }\r\n  }\r\n\r\n  setStaticValues() {\r\n    let staticValues = {};\r\n    for (let r = 0; r < this.state.matrix.length; r++) {\r\n      for (let c = 0; c < this.state.matrix[r].length; c++) {\r\n        if (this.state.matrix[r][c] !== 0) {\r\n          let newString = \"\";\r\n          newString += String(r) + String(c);\r\n          staticValues[newString] = 1;\r\n        }\r\n      }\r\n    }\r\n    this.setState({ staticValues: staticValues }, () => {});\r\n  }\r\n\r\n  componentWillMount() {\r\n    let startmatrix = JSON.parse(JSON.stringify(matrices[\"medium\"][0]));\r\n    this.setState({ matrix: startmatrix }, () => {\r\n      this.setStaticValues();\r\n    });\r\n    this.setState({ backgroundColor: WHITE_COLOR });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        {\" \"}\r\n        <div\r\n          className=\"justify-content-center\"\r\n          style={{\r\n            textAlign: \"center\",\r\n          }}\r\n        >\r\n          <div style={{ display: \"inline\" }}>\r\n            <p\r\n              style={{\r\n                display: \"inline\",\r\n              }}\r\n              className=\"mt-3 mr-3\"\r\n            >\r\n              Speed slider:\r\n            </p>\r\n            <input\r\n              type=\"range\"\r\n              min=\"0\"\r\n              max=\"50\"\r\n              defaultValue=\"25\"\r\n              onChange={this.handleChange}\r\n            />\r\n          </div>\r\n          <div className=\"h1\" style={{ display: \"inline\" }}>\r\n            <input\r\n              className=\"btn rounded-circle h1 btn-outline-success mt-3 p-2 ml-5 font-weight-bold\"\r\n              type=\"button\"\r\n              disabled={this.state.button}\r\n              onClick={() => this.startSolving()}\r\n              value=\"Solve\"\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className=\"container\">\r\n          <div className=\"row justify-content-center\">\r\n            <div className=\"mt-3\">\r\n              <table>\r\n                <tbody>\r\n                  {this.state.matrix.map((rows, r) => (\r\n                    <Row\r\n                      key={r}\r\n                      row={rows}\r\n                      backgroundColor={this.state.backgroundColor}\r\n                      rIndex={r}\r\n                      staticValues={this.state.staticValues}\r\n                    />\r\n                  ))}\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default GridNew;\r\n","import React, { Component } from \"react\";\r\nimport Row from \"./Row\";\r\nimport { matrices } from \"./data\";\r\n\r\nwindow.$flag = false;\r\n\r\nconst WHITE_COLOR = \"#FFFFFF\";\r\n\r\nclass GridNew extends Component {\r\n  state = {\r\n    matrix: [[]],\r\n    backgroundColor: \"\",\r\n    staticValues: {},\r\n    speed: 25,\r\n    button: false,\r\n  };\r\n\r\n  gridChecker(row, column, number) {\r\n    let { matrix } = this.state;\r\n    row = Math.floor(row / 3) * 3;\r\n    column = Math.floor(column / 3) * 3;\r\n    for (let a = row; a < row + 3; a++) {\r\n      for (let b = column; b < column + 3; b++) {\r\n        if (number === matrix[a][b]) return false;\r\n      }\r\n    }\r\n    return true;\r\n  }\r\n\r\n  columnChecker(column, number) {\r\n    let { matrix } = this.state;\r\n    for (let a = 0; a < 9; a++) {\r\n      if (number === matrix[a][column]) return false;\r\n    }\r\n    return true;\r\n  }\r\n\r\n  rowChecker(row, number) {\r\n    let { matrix } = this.state;\r\n    for (let a = 0; a < 9; a++) {\r\n      if (number === matrix[row][a]) return false;\r\n    }\r\n    return true;\r\n  }\r\n\r\n  visualizer = (row, column) => {\r\n    var temp = String(row) + String(column);\r\n    if (temp in this.state.staticValues) {\r\n      return -1;\r\n    } else {\r\n      for (let x = this.state.matrix[row][column] + 1; x < 10; x++) {\r\n        if (\r\n          this.gridChecker(row, column, x) &&\r\n          this.rowChecker(row, x) &&\r\n          this.columnChecker(column, x)\r\n        ) {\r\n          return x;\r\n        }\r\n      }\r\n      return 0;\r\n    }\r\n  };\r\n\r\n  recursion = (row, column) => {\r\n    var rowColIndex = String(row) + String(column);\r\n    if (rowColIndex in this.state.staticValues) {\r\n      this.recursion(row, column + 1);\r\n    } else {\r\n      if (row < 9 && column < 9) {\r\n        for (let x = 1; x < 10; x++) {\r\n          if (\r\n            this.gridChecker(row, column, x) &&\r\n            this.rowChecker(row, x) &&\r\n            this.columnChecker(column, x)\r\n          ) {\r\n            let newMatrix = [...this.state.matrix];\r\n            newMatrix[row][column] = x;\r\n            this.recursion(row, column + 1);\r\n          }\r\n        }\r\n        if (!window.$flag) {\r\n          let abMatrix = [...this.state.matrix];\r\n          abMatrix[row][column] = 0;\r\n          this.setState({ matrix: abMatrix });\r\n        }\r\n      } else if (column >= 9) {\r\n        this.recursion(row + 1, 0);\r\n      } else {\r\n        window.$flag = true;\r\n        return;\r\n      }\r\n    }\r\n  };\r\n\r\n  sleep = (ms) => {\r\n    return new Promise((resolve) => setTimeout(resolve, ms));\r\n  };\r\n\r\n  startSolving = async () => {\r\n    this.setState({ button: true });\r\n    let row = 0;\r\n    let col = 0;\r\n\r\n    while (true) {\r\n      if (this.state.speed === \"50\") {\r\n        let newMatrix = [];\r\n        newMatrix = JSON.parse(JSON.stringify(matrices[\"hard\"][0]));\r\n        this.setState({ matrix: newMatrix }, () => this.recursion(0, 0));\r\n        window.$flag = false;\r\n        break;\r\n      }\r\n      if (row > 8) {\r\n        break;\r\n      }\r\n\r\n      let value = this.visualizer(row, col);\r\n\r\n      if (value === 0) {\r\n        let newMatrix = [...this.state.matrix];\r\n        newMatrix[row][col] = value;\r\n        this.setState(\r\n          { matrix: newMatrix },\r\n          await this.sleep(50 - this.props.speed)\r\n        );\r\n        while (true) {\r\n          if (col === 0) {\r\n            row -= 1;\r\n            col = 8;\r\n          } else {\r\n            col -= 1;\r\n          }\r\n          var temp = String(row) + String(col);\r\n          if (!(temp in this.state.staticValues)) {\r\n            break;\r\n          }\r\n        }\r\n        if (row < 0 && col < 0) {\r\n          alert(\"No solutions possible\");\r\n          break;\r\n        }\r\n      } else if (value === -1) {\r\n        if (col === 8) {\r\n          row += 1;\r\n          col = 0;\r\n        } else {\r\n          col += 1;\r\n        }\r\n      } else {\r\n        let newMatrix = [...this.state.matrix];\r\n        newMatrix[row][col] = value;\r\n        this.setState(\r\n          { matrix: newMatrix },\r\n          await this.sleep(50 - this.props.speed)\r\n        );\r\n\r\n        if (col === 8) {\r\n          row += 1;\r\n          col = 0;\r\n        } else {\r\n          col += 1;\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (prevProps.level !== this.props.level) {\r\n      let newMatrix = [];\r\n      newMatrix = JSON.parse(JSON.stringify(matrices[\"hard\"][0]));\r\n      this.setState({ matrix: newMatrix }, () => {\r\n        this.setStaticValues();\r\n      });\r\n      this.setState({ backgroundColor: WHITE_COLOR }, () => {});\r\n    }\r\n  }\r\n\r\n  handleChange = (e) => {\r\n    this.setState({ speed: e.target.value });\r\n  };\r\n\r\n  setStaticValues() {\r\n    let staticValues = {};\r\n    for (let r = 0; r < this.state.matrix.length; r++) {\r\n      for (let c = 0; c < this.state.matrix[r].length; c++) {\r\n        if (this.state.matrix[r][c] !== 0) {\r\n          let newString = \"\";\r\n          newString += String(r) + String(c);\r\n          staticValues[newString] = 1;\r\n        }\r\n      }\r\n    }\r\n    this.setState({ staticValues: staticValues }, () => {});\r\n  }\r\n\r\n  componentWillMount() {\r\n    let startmatrix = JSON.parse(JSON.stringify(matrices[\"hard\"][0]));\r\n    this.setState({ matrix: startmatrix }, () => {\r\n      this.setStaticValues();\r\n    });\r\n    this.setState({ backgroundColor: WHITE_COLOR });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        {\" \"}\r\n        <div\r\n          className=\"justify-content-center\"\r\n          style={{\r\n            textAlign: \"center\",\r\n          }}\r\n        >\r\n          <div style={{ display: \"inline\" }}>\r\n            <p\r\n              style={{\r\n                display: \"inline\",\r\n              }}\r\n              className=\"mt-3 mr-3\"\r\n            >\r\n              Speed slider:\r\n            </p>\r\n            <input\r\n              type=\"range\"\r\n              min=\"0\"\r\n              max=\"50\"\r\n              defaultValue=\"25\"\r\n              onChange={this.handleChange}\r\n            />\r\n          </div>\r\n          <div className=\"h1\" style={{ display: \"inline\" }}>\r\n            <input\r\n              className=\"btn rounded-circle h1 btn-outline-success mt-3 p-2 ml-5 font-weight-bold\"\r\n              type=\"button\"\r\n              disabled={this.state.button}\r\n              onClick={() => this.startSolving()}\r\n              value=\"Solve\"\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className=\"container\">\r\n          <div className=\"row justify-content-center\">\r\n            <div className=\"mt-3\">\r\n              <table>\r\n                <tbody>\r\n                  {this.state.matrix.map((rows, r) => (\r\n                    <Row\r\n                      key={r}\r\n                      row={rows}\r\n                      backgroundColor={this.state.backgroundColor}\r\n                      rIndex={r}\r\n                      staticValues={this.state.staticValues}\r\n                    />\r\n                  ))}\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default GridNew;\r\n","import React from \"react\";\r\nimport { BrowserRouter as Router, Route, Switch, Link } from \"react-router-dom\";\r\nimport EasyGrid from \"./EasyGrid\";\r\nimport MediumGrid from \"./MediumGrid\";\r\nimport HardGrid from \"./HardGrid\";\r\n\r\nclass Navbar extends React.Component {\r\n  state = {\r\n    level: \"easy\",\r\n    speed: 0,\r\n  };\r\n\r\n  buttonSelector = (e) => {\r\n    this.setState({ level: e.target.value });\r\n  };\r\n\r\n  // btn nav-item col-4 btn-outline-success\r\n  render() {\r\n    return (\r\n      <Router>\r\n        <div>\r\n          <nav className=\"navbar mt-5 navbar-expand-lg navbar-dark justify-content-center  bg-dark\">\r\n            <ul className=\"navbar-nav  \">\r\n              <Link to={process.env.PUBLIC_URL + \"/\"}>\r\n                <li className=\"nav-item text-success nav-link\">Easy</li>\r\n              </Link>\r\n\r\n              <Link to={process.env.PUBLIC_URL + \"/medium\"}>\r\n                <li className=\"nav-item text-success nav-link\">Medium</li>\r\n              </Link>\r\n\r\n              <Link to={process.env.PUBLIC_URL + \"/hard\"}>\r\n                <li className=\"nav-item  text-success nav-link\">Hard</li>\r\n              </Link>\r\n            </ul>\r\n          </nav>\r\n          <Switch>\r\n            <Route\r\n              exact\r\n              path={process.env.PUBLIC_URL + \"/\"}\r\n              component={EasyGrid}\r\n            >\r\n              {/* <EasyGrid /> */}\r\n            </Route>\r\n            <Route\r\n              exact\r\n              path={process.env.PUBLIC_URL + \"/medium\"}\r\n              component={MediumGrid}\r\n            >\r\n              {/* <MediumGrid /> */}\r\n            </Route>\r\n            <Route\r\n              exact\r\n              path={process.env.PUBLIC_URL + \"/hard\"}\r\n              component={HardGrid}\r\n            >\r\n              {/* <HardGrid /> */}\r\n            </Route>\r\n          </Switch>\r\n        </div>\r\n      </Router>\r\n\r\n      // <div>\r\n      //   <nav className=\"navbar mt-5 navbar-expand-lg navbar-dark bg-dark\">\r\n      //     <div className=\"navbar-nav d-flex center-buttons col-4 \">\r\n      //       <button\r\n      //         style={btnStyle}\r\n      //         onClick={this.buttonSelector}\r\n      //         className=\"btn col-4 btn-outline-success float-right\"\r\n      //         type=\"button\"\r\n      //         value=\"easy\"\r\n      //       >\r\n      //         Easy\r\n      //       </button>\r\n      //       <button\r\n      //         style={btnStyle}\r\n      //         onClick={this.buttonSelector}\r\n      //         className=\"btn col-4 btn-outline-success float-right\"\r\n      //         type=\"button\"\r\n      //         value=\"medium\"\r\n      //       >\r\n      //         Medium\r\n      //       </button>\r\n      //       <button\r\n      //         style={btnStyle}\r\n      //         onClick={this.buttonSelector}\r\n      //         className=\"btn col-4 btn-outline-success float-right\"\r\n      //         type=\"button\"\r\n      //         value=\"hard\"\r\n      //       >\r\n      //         Hard\r\n      //       </button>\r\n      //     </div>\r\n      //   </nav>\r\n      //   <div>\r\n      //     <p>Default range slider:</p>\r\n      //     <input\r\n      //       type=\"range\"\r\n      //       min=\"0\"\r\n      //       max=\"50\"\r\n      //       defaultValue=\"25\"\r\n      //       onChange={this.handleChange}\r\n      //     />\r\n      //   </div>\r\n      //   <GridNew level={this.state.level} speed={this.state.speed} />\r\n      // </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Navbar;\r\n","import React from \"react\";\nimport Navbar from \"./Navbar\";\n\nfunction App() {\n  return (\n    <div>\n      <Navbar />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}